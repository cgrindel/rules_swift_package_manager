"""
Example module for grpc + proto target generation.
"""

bazel_dep(
    name = "rules_swift_package_manager",
    version = "0.0.0",
)
local_path_override(
    module_name = "rules_swift_package_manager",
    path = "../..",
)

bazel_dep(name = "cgrindel_bazel_starlib", version = "0.21.0")
bazel_dep(name = "bazel_skylib", version = "1.7.1")

# The apple_support bazel_dep must come before the rules_cc.
# https://github.com/bazelbuild/apple_support#incompatible-toolchain-resolution
bazel_dep(name = "apple_support", version = "1.17.1")
bazel_dep(
    name = "rules_swift",
    version = "2.2.1",
    repo_name = "build_bazel_rules_swift",
)

non_module_deps = use_extension("@build_bazel_rules_swift//swift:extensions.bzl", "non_module_deps")
use_repo(
    non_module_deps,
    "build_bazel_rules_swift_index_import",
    "build_bazel_rules_swift_local_config",
    "com_github_apple_swift_log",
)

bazel_dep(
    name = "rules_apple",
    version = "3.9.2",
    repo_name = "build_bazel_rules_apple",
)

bazel_dep(
    name = "bazel_skylib_gazelle_plugin",
    version = "1.7.1",
    dev_dependency = True,
)
bazel_dep(
    name = "gazelle",
    version = "0.39.1",
    dev_dependency = True,
    repo_name = "bazel_gazelle",
)

bazel_dep(name = "rules_proto", version = "6.0.2")

# Gazelle currently needs protobuf to be named com_google_protobuf.
# If they fix this, we can remove the repo_name argument.
bazel_dep(name = "protobuf", version = "28.3", repo_name = "com_google_protobuf")

apple_cc_configure = use_extension(
    "@apple_support//crosstool:setup.bzl",
    "apple_cc_configure_extension",
)
use_repo(apple_cc_configure, "local_config_apple_cc")
