load("@bazel_binaries//:defs.bzl", "bazel_binaries")
load("@cgrindel_bazel_starlib//bzlformat:defs.bzl", "bzlformat_pkg")
load("@cgrindel_bazel_starlib//bzllib:defs.bzl", "lists")
load("@cgrindel_bazel_starlib//shlib/rules:execute_binary.bzl", "execute_binary")
load(
    "@rules_bazel_integration_test//bazel_integration_test:defs.bzl",
    "integration_test_utils",
)
load(":example_infos.bzl", "example_infos")

bzlformat_pkg(name = "bzlformat")

# Exclude this entire directory from having anything generated by Gazelle. That
# way the test cases won't be fixed by `bazel run //:gazelle` when run in this
# repository.
# gazelle:exclude **

sh_binary(
    name = "test_runner",
    testonly = True,
    srcs = ["test_runner.sh"],
    data = [
        "@rules_bazel_integration_test//tools:create_scratch_dir",
    ],
    deps = [
        "@bazel_tools//tools/bash/runfiles",
        "@cgrindel_bazel_starlib//shlib/lib:assertions",
    ],
)

execute_binary(
    name = "legacy_test_runner",
    testonly = True,
    arguments = ["--legacy"],
    binary = ":test_runner",
)

# MARK: - Integration Tests

[
    example_infos.bazel_integration_test(ei)
    for ei in example_infos.all
]

example_infos.ci_test_params_suite(
    name = "all_example_test_params",
    example_infos = example_infos.all,
)

_smoke_test_names = sorted(lists.flatten([
    [
        example_infos.test_name(
            ei.name,
            enable_bzlmod,
            bazel_binaries.versions.current,
        )
        for enable_bzlmod in ei.enable_bzlmods
    ]
    for ei in example_infos.all
]))

_all_test_names = sorted(lists.flatten([
    [
        [
            example_infos.test_name(
                ei.name,
                enable_bzlmod,
                version,
            )
            for enable_bzlmod in ei.enable_bzlmods
        ]
        for version in ei.versions
    ]
    for ei in example_infos.all
]))

test_suite(
    name = "smoke_integration_tests",
    tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    tests = _smoke_test_names,
    visibility = ["//:__subpackages__"],
)

test_suite(
    name = "all_integration_tests",
    # If you don't apply the test tags to the test suite, the test suite will
    # be found when `bazel test //...` is executed.
    tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    tests = _all_test_names,
    visibility = ["//:__subpackages__"],
)
