load("@cgrindel_bazel_starlib//bzlformat:defs.bzl", "bzlformat_pkg")
load(
    "@contrib_rules_bazel_integration_test//bazel_integration_test:defs.bzl",
    "bazel_integration_tests",
    "default_test_runner",
    "integration_test_utils",
)
load("//:bazel_versions.bzl", "CURRENT_BAZEL_VERSION", "SUPPORTED_BAZEL_VERSIONS")

bzlformat_pkg(name = "bzlformat")

# Exclude this entire directory from having anything gnerated by Gazelle. That
# way the test cases won't be fixed by `bazel run //:gazelle` when run in this
# repository.
# gazelle:exclude **

# Declare a test runner to drive the integration tests.
default_test_runner(
    name = "default_test_runner",
    bazel_cmds = [
        "info",
        "run //:gazelle",
        "test //...",
    ],
)

bazel_integration_tests(
    name = "simple_test",
    bazel_versions = SUPPORTED_BAZEL_VERSIONS,
    test_runner = ":default_test_runner",
    workspace_files = integration_test_utils.glob_workspace_files("simple") + [
        "//:local_repository_files",
    ],
    workspace_path = "simple",
)

test_suite(
    name = "smoke_integration_tests",
    tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    tests = [
        integration_test_utils.bazel_integration_test_name(
            "simple_test",
            CURRENT_BAZEL_VERSION,
        ),
    ],
    visibility = ["//:__subpackages__"],
)

test_suite(
    name = "all_integration_tests",
    # If you don't apply the test tags to the test suite, the test suite will
    # be found when `bazel test //...` is executed.
    tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    tests = integration_test_utils.bazel_integration_test_names(
        "simple_test",
        SUPPORTED_BAZEL_VERSIONS,
    ),
    visibility = ["//:__subpackages__"],
)
