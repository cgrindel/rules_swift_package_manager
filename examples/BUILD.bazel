load("@cgrindel_bazel_starlib//bzlformat:defs.bzl", "bzlformat_pkg")
load(
    "@contrib_rules_bazel_integration_test//bazel_integration_test:defs.bzl",
    "bazel_integration_tests",
    "integration_test_utils",
)
load("//:bazel_versions.bzl", "CURRENT_BAZEL_VERSION", "SUPPORTED_BAZEL_VERSIONS")
load(":test_utils.bzl", "test_utils")

bzlformat_pkg(name = "bzlformat")

# Exclude this entire directory from having anything gnerated by Gazelle. That
# way the test cases won't be fixed by `bazel run //:gazelle` when run in this
# repository.
# gazelle:exclude **

# MARK: - Example Using http_archive to Specify External Dependencies

sh_binary(
    name = "http_archive_ext_deps_test_runner",
    testonly = True,
    srcs = ["http_archive_ext_deps_test_runner.sh"],
    data = [
        "@contrib_rules_bazel_integration_test//tools:create_scratch_dir",
    ],
    deps = [
        "@bazel_tools//tools/bash/runfiles",
        "@cgrindel_bazel_starlib//shlib/lib:assertions",
    ],
)

bazel_integration_tests(
    name = "http_archive_ext_deps_test",
    bazel_versions = SUPPORTED_BAZEL_VERSIONS,
    test_runner = ":http_archive_ext_deps_test_runner",
    workspace_files = integration_test_utils.glob_workspace_files("http_archive_ext_deps") + [
        "//:local_repository_files",
    ],
    workspace_path = "http_archive_ext_deps",
)

# MARK: - Package Manifest example

sh_binary(
    name = "pkg_manifest_minimal_test_runner",
    testonly = True,
    srcs = ["pkg_manifest_minimal_test_runner.sh"],
    data = [
        "@contrib_rules_bazel_integration_test//tools:create_scratch_dir",
    ],
    deps = [
        "@bazel_tools//tools/bash/runfiles",
        "@cgrindel_bazel_starlib//shlib/lib:assertions",
    ],
)

bazel_integration_tests(
    name = "pkg_manifest_minimal_test",
    bazel_versions = SUPPORTED_BAZEL_VERSIONS,
    test_runner = ":pkg_manifest_minimal_test_runner",
    workspace_files = integration_test_utils.glob_workspace_files("pkg_manifest_minimal") + [
        "//:local_repository_files",
    ],
    workspace_path = "pkg_manifest_minimal",
)

# MARK: - Test Suites

_test_base_names = [
    "http_archive_ext_deps_test",
    "pkg_manifest_minimal_test",
]

_smoke_test_names = [
    integration_test_utils.bazel_integration_test_name(
        test_base_name,
        CURRENT_BAZEL_VERSION,
    )
    for test_base_name in _test_base_names
]

_all_test_names = test_utils.integration_test_names(
    base_names = _test_base_names,
    versions = SUPPORTED_BAZEL_VERSIONS,
)

test_suite(
    name = "smoke_integration_tests",
    tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    tests = _smoke_test_names,
    visibility = ["//:__subpackages__"],
)

test_suite(
    name = "all_integration_tests",
    # If you don't apply the test tags to the test suite, the test suite will
    # be found when `bazel test //...` is executed.
    tags = integration_test_utils.DEFAULT_INTEGRATION_TEST_TAGS,
    tests = _all_test_names,
    visibility = ["//:__subpackages__"],
)
