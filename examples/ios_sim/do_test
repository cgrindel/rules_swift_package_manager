#!/usr/bin/env bash

set -o errexit -o nounset -o pipefail

# rules_xcodeproj executes some Bazel commands. We need to tell it which
# version to use. Ideally, we would pass the path to the binary.  For now, we
# will count on the fact that it expects to find `bazel` in the PATH.
if [[ -n "${BIT_BAZEL_BINARY:-}" ]]; then
  bazel="${BIT_BAZEL_BINARY}"
  tmp_dir="$( mktemp -d )"
  ln -s "${BIT_BAZEL_BINARY}" "${tmp_dir}/bazel"
  export PATH="${tmp_dir}:${PATH}"
else
  bazel="bazel"
fi

# Remove the temp directory if we created it.
cleanup() {
  if [[ -n "${tmp_dir:-}" ]]; then
    rm -rf "${tmp_dir}"
  fi
}
trap cleanup EXIT

# Generate Swift external deps and update build files
"${bazel}" run //:tidy

# Generate the Xcode project
"${bazel}" run //:xcodeproj

# Big clean. We perform the expunge to ensure that SPM commands work properly
# when Bazel is executed by Xcode projects generated by rules_xcodeproj.
# Related issue:
# https://github.com/MobileNativeFoundation/rules_xcodeproj/issues/2355
"${bazel}" clean --expunge

# Build the FooTests scheme in the Xcode project
xcodebuild -project App.xcodeproj -scheme FooTests

# Ensure that it builds and tests pass
"${bazel}" test //...

