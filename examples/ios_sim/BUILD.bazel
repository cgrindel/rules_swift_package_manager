load("@bazel_gazelle//:def.bzl", "gazelle", "gazelle_binary")
load("@cgrindel_bazel_starlib//bzltidy:defs.bzl", "tidy")
load("@rules_swift_package_manager//swiftpkg:defs.bzl", "swift_package_tool")
load(
    "@rules_xcodeproj//xcodeproj:defs.bzl",
    "xcodeproj",
)

tidy(
    name = "tidy",
    targets = [
        ":update_build_files",
    ],
)

# Puprosefully am not adding this to tidy. It is expensive to run and only
# needs to be run when the Package.swift has been updated.
swift_package_tool(
    name = "update_swift_packages",
    cmd = "update",
    package = "Package.swift",
)

# MARK: - Gazelle

# Ignore the Swift build folder
# gazelle:exclude .build

gazelle_binary(
    name = "gazelle_bin",
    languages = [
        "@bazel_skylib_gazelle_plugin//bzl",
        "@swift_gazelle_plugin//gazelle",
    ],
)

gazelle(
    name = "update_build_files",
    data = [
        "@swift_deps_info//:swift_deps_index",
    ],
    extra_args = [
        "-swift_dependency_index=$(location @swift_deps_info//:swift_deps_index)",
    ],
    gazelle = ":gazelle_bin",
)

# Xcodeproj

xcodeproj(
    name = "xcodeproj",
    project_name = "App",
    tags = ["manual"],
    top_level_targets = [
        "//Tests/FooTests",
    ],
)
