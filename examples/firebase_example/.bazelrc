# Import Shared settings
import %workspace%/../../shared.bazelrc

# Import CI settings.
import %workspace%/../../ci.bazelrc

# Try to import a local.rc file; typically, written by CI
try-import %workspace%/../../local.bazelrc

# The CNIOBoringSSL uses C++14 features like 'enable_if_t' macro support.
# For more details on how to enable this in Bazel: 
# https://stackoverflow.com/questions/40260242/how-to-set-c-standard-version-when-build-with-bazel/43388168#43388168
build --cxxopt='-std=c++14'

# Firebase SPM support requires `-ObjC` linker option.
# https://github.com/firebase/firebase-ios-sdk/blob/master/SwiftPackageManager.md#requirements
build --linkopt='-ObjC'

# Since this project is not building a ios_application or ios_unit_test, we need to specify an Apple platform.
# https://github.com/bazelbuild/rules_swift/issues/240#issuecomment-708885118
build --apple_platform_type=ios

# TODO: Figure out how to support cxxLanguageStandard in Swift manifest. 
# Should we scan all of the manifests and pick the highest one?
# The problem is that we do not want to just add it to the cxxopts 
# for each target. It would override the values in the .bazelrc.
# Also, I think that you do not want modules linked with different standards.

# build --cxxopt='-std=gnu++14'
