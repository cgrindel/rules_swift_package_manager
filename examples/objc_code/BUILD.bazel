load("@bazel_gazelle//:def.bzl", "gazelle", "gazelle_binary")
load("@build_bazel_rules_swift//swift:swift.bzl", "swift_binary")
load("@cgrindel_bazel_starlib//bzltidy:defs.bzl", "tidy")
load("@cgrindel_swift_bazel//swiftpkg:defs.bzl", "swift_update_packages")

tidy(
    name = "tidy",
    targets = [
        ":swift_update_pkgs",
        ":update_build_files",
    ],
)

# MARK: - Gazelle

# Ignore the Swift build folder
# gazelle:exclude .build

# gazelle:swift_default_module_name objc_code

gazelle_binary(
    name = "gazelle_bin",
    languages = [
        "@bazel_skylib_gazelle_plugin//bzl",
        "@cgrindel_swift_bazel//gazelle",
    ],
)

gazelle(
    name = "update_build_files",
    gazelle = ":gazelle_bin",
)

swift_update_packages(
    name = "swift_update_pkgs",
    gazelle = ":gazelle_bin",
    generate_swift_deps_for_workspace = False,
    update_bzlmod_stanzas = True,
)

swift_binary(
    name = "objc_code",
    srcs = ["main.swift"],
    visibility = ["//swift:__subpackages__"],
    deps = [
        "@swiftpkg_trustkit//:TrustKit",
    ],
)

sh_test(
    name = "objc_code_test",
    srcs = ["objc_code_test.sh"],
    data = [":objc_code"],
    deps = ["@bazel_tools//tools/bash/runfiles"],
)
