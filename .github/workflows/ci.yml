# Portions of this file are generated by the build.  
#
# Note:
# - Modification to values outside of the matrix strategy sections should 
#   persist.
# - Comments and custom formatting will be lost.
name: Continuous Integration
"on":
  pull_request:
    branches:
      - main
  merge_group: {}
  schedule:
    - cron: 14 11 * * *
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  MACOS_RUNNER: macos-15
  UBUNTU_RUNNER: ubuntu-22.04

jobs:
  all_ci_tests:
    runs-on: ${{ env.UBUNTU_RUNNER }}
    needs:
      - tidy_and_test_matrix
      - integration_test_matrix
    if: ${{ always() }}
    steps:
      - uses: cgrindel/gha_join_jobs@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  integration_test_matrix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - test: '@@//bzlmod:e2e_test'
            runner: ${{ env.UBUNTU_RUNNER }}
          - test: '@@//bzlmod:e2e_test'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:firebase_example_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:google_maps_example_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:grpc_example_test_bazel_.bazelversion'
            runner: ${{ env.UBUNTU_RUNNER }}
          - test: '@@//examples:grpc_example_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:interesting_deps_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:ios_sim_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:lottie_ios_example_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:messagekit_example_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:nimble_example_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:objc_code_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:phone_number_kit_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:pkg_manifest_minimal_test_bazel_.bazelversion'
            runner: ${{ env.UBUNTU_RUNNER }}
          - test: '@@//examples:pkg_manifest_minimal_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:resources_example_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:shake_ios_example_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:snapkit_example_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:soto_example_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:stripe_example_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:symlink_example_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:tca_example_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:vapor_example_test_bazel_.bazelversion'
            runner: ${{ env.UBUNTU_RUNNER }}
          - test: '@@//examples:vapor_example_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//examples:xcmetrics_example_test_bazel_.bazelversion'
            runner: ${{ env.MACOS_RUNNER }}
          - test: '@@//release:archive_test'
            runner: ${{ env.UBUNTU_RUNNER }}
          - test: '@@//release:archive_test'
            runner: ${{ env.MACOS_RUNNER }}
    runs-on: ${{ matrix.runner }}
    env:
      CC: clang
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/set_up_ubuntu
        if: ${{ startsWith(matrix.runner, 'ubuntu') }}
        with:
          repo_name: rules_swift_package_manager
          ubuntu_version: "22.04"
      - uses: ./.github/actions/set_up_macos
        if: ${{ startsWith(matrix.runner, 'macos') }}
        with:
          repo_name: rules_swift_package_manager
          test_target: ${{ matrix.test }}
      - uses: ./.github/actions/configure_remote_cache_auth
        with:
          buildbuddy_api_key: ${{ secrets.BUILDBUDDY_API_KEY }}
      - uses: ./.github/actions/execute_test
        with:
          bzlmod_enabled: ${{ matrix.bzlmod_enabled }}
          test_target: ${{ matrix.test }}
  tidy_and_test_matrix:
    strategy:
      fail-fast: false
      matrix:
        runner:
          - ${{ env.MACOS_RUNNER }}
          - ${{ env.UBUNTU_RUNNER }}
    runs-on: ${{ matrix.runner }}
    env:
      CC: clang
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/set_up_ubuntu
        if: ${{ startsWith(matrix.runner, 'ubuntu') }}
        with:
          repo_name: rules_swift_package_manager
          ubuntu_version: "22.04"
      - uses: ./.github/actions/set_up_macos
        if: ${{ startsWith(matrix.runner, 'macos') }}
        with:
          repo_name: rules_swift_package_manager
      - uses: ./.github/actions/configure_remote_cache_auth
        with:
          buildbuddy_api_key: ${{ secrets.BUILDBUDDY_API_KEY }}
      - uses: ./.github/actions/tidy_and_test
