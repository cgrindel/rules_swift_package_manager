load("@cgrindel_bazel_starlib//bzlformat:defs.bzl", "bzlformat_pkg")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "swift",
    srcs = [
        "bazel_label.go",
        "file_info.go",
        "files.go",
        "http_archive.go",
        "imports.go",
        "is_builtin_module.go",
        "module.go",
        "module_dir.go",
        "module_index.go",
        "module_name.go",
        "module_type.go",
        "repo_name.go",
        "repo_rule_from_pin.go",
        "rule_kinds.go",
        "rules_common.go",
        "rules_from_manifest.go",
        "rules_from_srcs.go",
    ],
    importpath = "github.com/cgrindel/swift_bazel/gazelle/internal/swift",
    visibility = ["//gazelle:__subpackages__"],
    deps = [
        "//gazelle/internal/pathdistance",
        "//gazelle/internal/spdesc",
        "//gazelle/internal/spdump",
        "//gazelle/internal/spreso",
        "//gazelle/internal/stringslices",
        "//gazelle/internal/swiftpkg",
        "@bazel_gazelle//config:go_default_library",
        "@bazel_gazelle//label:go_default_library",
        "@bazel_gazelle//language:go_default_library",
        "@bazel_gazelle//rule:go_default_library",
    ],
)

go_test(
    name = "swift_test",
    srcs = [
        "file_info_test.go",
        "files_test.go",
        "http_archive_test.go",
        "module_dir_test.go",
        "module_index_test.go",
        "module_name_test.go",
        "repo_name_test.go",
        "repo_rule_from_pin_test.go",
        "rule_kinds_test.go",
    ],
    deps = [
        ":swift",
        "//gazelle/internal/spreso",
        "@bazel_gazelle//label:go_default_library",
        "@bazel_gazelle//rule:go_default_library",
        "@com_github_stretchr_testify//assert",
    ],
)

bzlformat_pkg(name = "bzlformat")

# MARK: - Integration Test

filegroup(
    name = "all_files",
    srcs = glob(["*"]),
    visibility = ["//:__subpackages__"],
)
