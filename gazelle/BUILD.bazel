load("@cgrindel_bazel_starlib//bzlformat:defs.bzl", "bzlformat_pkg")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_path", "go_test")

# MARK: - Starlark

bzlformat_pkg(name = "bzlformat")

# MARK: - Integration Test

filegroup(
    name = "all_files",
    srcs = glob(["*"]),
    visibility = ["//:__subpackages__"],
)

# MARK: - Gazelle Plugin

go_library(
    name = "gazelle",
    srcs = [
        "config.go",
        "doc.go",
        "generate.go",
        "kinds.go",
        "lang.go",
        "resolve.go",
        "update_repos.go",
    ],
    importpath = "github.com/cgrindel/rules_swift_package_manager/gazelle",
    visibility = ["//visibility:public"],
    deps = [
        "//gazelle/internal/reslog",
        "//gazelle/internal/spreso",
        "//gazelle/internal/stringslices",
        "//gazelle/internal/swift",
        "//gazelle/internal/swiftbin",
        "//gazelle/internal/swiftcfg",
        "//gazelle/internal/swiftpkg",
        "//gazelle/internal/updmarker",
        "@com_github_bazelbuild_bazel_gazelle//config:go_default_library",
        "@com_github_bazelbuild_bazel_gazelle//label:go_default_library",
        "@com_github_bazelbuild_bazel_gazelle//language:go_default_library",
        "@com_github_bazelbuild_bazel_gazelle//repo:go_default_library",
        "@com_github_bazelbuild_bazel_gazelle//resolve:go_default_library",
        "@com_github_bazelbuild_bazel_gazelle//rule:go_default_library",
        "@org_golang_x_exp//slices:go_default_library",
        "@org_golang_x_text//cases:go_default_library",
        "@org_golang_x_text//language:go_default_library",
    ],
)

go_test(
    name = "gazelle_test",
    srcs = ["update_repos_test.go"],
    deps = [
        ":gazelle",
        "@com_github_bazelbuild_bazel_gazelle//language:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
    ],
)

go_path(
    name = "godoc_root",
    deps = [
        ":gazelle",
        "//gazelle/internal/jsonutils",
    ],
)
